<UserControl x:Class="Visualizer.View.MicroZoneUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:View="clr-namespace:Visualizer.View"
             xmlns:Util="clr-namespace:Visualizer.Util"
             xmlns:ModelingUI="clr-namespace:Visualizer.Util"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Border x:Name="Border" HorizontalAlignment="Center" VerticalAlignment="Center" 
          BorderBrush="{Binding BorderBrush}" BorderThickness="2" CornerRadius="{Binding CornerRadius, UpdateSourceTrigger=PropertyChanged}"
            MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave"
          RenderTransformOrigin="0.5,0.5">
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <!--<DataTrigger Binding="{Binding Path=IsDoorZone}" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Purple" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>-->
                    <DataTrigger Binding="{Binding Path=IsGeneralZone}" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Blue" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--<DataTrigger Binding="{Binding Path=IsWashZone}" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <ImageBrush ImageSource="..\Resources\Sink.png" Stretch="UniformToFill"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsAlarmed}" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Red" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>-->
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Border.RenderTransform>
            <TransformGroup>
                <TranslateTransform X="{Binding LocationX}" 
                                    Y="{Binding LocationY}"/>
                <RotateTransform Angle="{Binding Rotation, UpdateSourceTrigger=PropertyChanged}" 
                                 CenterX="{Binding CenterX, UpdateSourceTrigger=PropertyChanged}" CenterY="{Binding CenterY, UpdateSourceTrigger=PropertyChanged}"/>
            </TransformGroup>

        </Border.RenderTransform>

        <Border.ContextMenu>
            <ContextMenu>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="ID: "/>
                            <TextBlock Text="{Binding RawId}"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Header="Rename" Command="{Binding RenameCommand}"/>
                <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
            </ContextMenu>
        </Border.ContextMenu>
        <DockPanel x:Name="MicroZone" Focusable="False" LastChildFill="True" MinHeight="1" MinWidth="1"
               Height="{Binding Height,UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
               Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}">
            <DockPanel x:Name="LowerDockPanel_MicroZone" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
                <Thumb DockPanel.Dock="Right" VerticalAlignment="Bottom" Margin="0,0,1,1"
               DragDelta="OnResizeThumbDragDelta" 
               DragStarted="OnResizeThumbDragStarted" 
               DragCompleted="OnResizeThumbDragCompleted">
                    <Thumb.Style>
                        <Style TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
                            <Style.Setters>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid x:Name="resizeVisual" DockPanel.Dock="Right" VerticalAlignment="Bottom">
                                                <Line X1="6" Y1="18" X2="18" Y2="6" Stroke="Black" StrokeThickness="1.5"/>

                                                <!--smallest/right|bottom most -->
                                                <Line X1="10" Y1="18" X2="18" Y2="10" Stroke="Black" StrokeThickness="1.5"/>
                                                <Line X1="14" Y1="18" X2="18" Y2="14" Stroke="Black" StrokeThickness="1.5"/>

                                                <!--longers/left|top most-->

                                                <Grid.Style>
                                                    <Style TargetType="{x:Type Grid}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="SizeNWSE"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style.Setters>
                        </Style>
                    </Thumb.Style>
                </Thumb>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                </StackPanel>
            </DockPanel>
            <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding Name, Mode=TwoWay}" Margin="0,15,0,0"
                       Foreground="{Binding DisplayForeground, Mode=OneTime}"
                       TextAlignment="Center"
                       Opacity="1.0"
                       FontSize="14"
                       FontWeight="ExtraBold"
                       VerticalAlignment="Center">
                </TextBlock>
                <Button x:Name="MicroZoneButton" Margin="0"  Height="20" Width="60" Command="{Binding LockUnlockCommand}" Content="{Binding LockUnlockText}">
                    <Button.Background>
                        <SolidColorBrush Color="{Binding LockUnlockPath}" Opacity="0.3" />
                    </Button.Background>
                </Button>
                <ItemsControl ItemsSource="{Binding Assets}"  VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>

                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <View:AssetUserControl DataContext="{Binding}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </DockPanel>
    </Border>
</UserControl>
